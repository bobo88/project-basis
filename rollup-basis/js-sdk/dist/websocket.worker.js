function calBcc(e){var n=0;for(i=0;i<e.length;i++)n^=e[i];return n}function PrintArry(e){var n="";for(i=0;i<e.length;i++)n+=e[i].toString(16).padStart(2,"0");return n=n.toUpperCase()}function makeFrame(e,n,t){var r=0,a=t.length,o=a+26,c=new Uint8Array(o);for(c[r++]=104,c[r++]=(4278190080&a)>>24,c[r++]=(16711680&a)>>16,c[r++]=(65280&a)>>8,c[r++]=255&a,c[r++]=0,i=0;i<e.length;i++)c[r++]=e[i].charCodeAt();for(c[r++]=n,i=0;i<t.length;i++)c[r++]=t[i].charCodeAt();a=c.slice(1,o-3+1);return c[r++]=calBcc(a),c[r++]=22,c}function ExexuteKeyDown(e){return makeFrame("RK3923C1201900139",0,JSON.stringify({data:{keyCode:e},event:"keyCode"}))}function ExexuteMouseDown(e,n){return makeFrame("RK3923C1201900139",0,JSON.stringify({data:{action:0,count:1,pointerId:0,x:e,y:n},event:"0"}))}function ExexuteMouseMove(e,n){return makeFrame("RK3923C1201900139",0,JSON.stringify({data:{action:2,count:1,pointerId:0,x:e,y:n},event:"2"}))}function ExexuteMouseUp(e,n){return makeFrame("RK3923C1201900139",0,JSON.stringify({data:{action:1,count:1,pointerId:0,x:e,y:n},event:"1"}))}function makeFrameExtend(e,n,t){var r=0,a=t.length,o=a+26,c=new Uint8Array(o);for(c[r++]=104,c[r++]=(4278190080&a)>>24,c[r++]=(16711680&a)>>16,c[r++]=(65280&a)>>8,c[r++]=255&a,c[r++]=0,i=0;i<e.length;i++)c[r++]=e[i].charCodeAt();for(c[r++]=n,i=0;i<t.length;i++)c[r++]=t[i];a=c.slice(1,o-3+1);return c[r++]=calBcc(a),c[r++]=22,c}function CheckScreenDirection(e){if(0==e[0]&&0==e[1]&&0==e[2]&&1==e[3]&&1==e[4]&&1==e[5]&&1==e[6])return screen=e[7]}var emptyCount=0;function GetEmptyFrame(){return new Uint8Array([255,241,80,128,18,95,252,33,26,200,1,39,252,192,0,126,3,16,64,99,61,119,226,182,227,110,0,55,86,120,235,112,171,197,88,8,89,118,240,71,61,35,108,166,43,89,78,156,224,35,28,45,116,203,226,252,119,125,38,19,195,4,64,2,96,246,3,32,128,199,154,17,14,155,218,160,132,0,42,149,74,30,116,165,64,42,202,168,202,240,242,30,168,119,134,160,98,140,184,95,166,103,191,13,39,139,249,88,189,227,45,12,191,72,60,253,112,120,94,169,11,36,156,19,152,164,160,110,202,170,122,136,165,12,46,131,89,2,36,1,65,3,146,16,64,7])}function GetScreenState(){return makeFrameExtend("RK3923C1201900139",5,new Uint8Array([0,0,0,1,1,1,1,2]))}function VerifyCode(e,n){var t=n.length+1,r=new TextEncoder("utf-8").encode(n),a=new Uint8Array(t);for(a[0]=4,i=0;i<r.length;i++)a[i+1]=r[i];return makeFrameExtend(e,6,a)}function CheckVerifyCode(e){var n=e.length-26;return 3==e.slice(24,24+n)[3]}function ConfigChannel(e,n){var t=new TextEncoder("utf-8").encode(n),r=[];for(r.push(7),i=0;i<t.length;i++)r.push(t[i]);return makeFrameExtend(e,6,r)}function OpenFileLog(e){return makeFrameExtend(e,7,new Uint8Array([1]))}function makeMultiLogin(e,n){n=JSON.stringify({type:3,data:n});return makeFrameExtend(e,13,new TextEncoder("utf-8").encode(n))}function makeStatistics(e,n){n=JSON.stringify({type:4,data:n});return makeFrameExtend(e,13,new TextEncoder("utf-8").encode(n))}function checkMultiLoginInfo(e){var n=e.length-26,e=e.slice(24,24+n),n=new TextDecoder("utf-8").decode(e);return void 0,JSON.parse(n)}function ExexuteSetPhoneSize(e,n){return void 0,JSON.stringify({data:{width:e,height:n},type:"setPhoneSize"})}function ExexuteSendBitRate(e){return JSON.stringify({type:2,data:{definition:1,clientType:"h5",sceneType:"cloudGame"}})}function makeSharpness(e){e=JSON.stringify({type:2,data:{definition:e,clientType:"h5",sceneType:"cloudGame"}});return makeFrameExtend("RK3923C1201900139",13,new TextEncoder("utf-8").encode(e))}function RequestIFrame(){return makeFrameExtend("RK3923C1201900139",6,new Uint8Array([32]))}function fpsSet(e){e=JSON.stringify({type:1,data:{frame_rate:e}});return makeFrameExtend("RK3923C1201900139",13,new TextEncoder("utf-8").encode(e))}
var videoPacketNum=0,hasPPS=!1,curTime=(new Date).getTime(),frameCount=0,socketURL=null,ws=null,sn=null,cardToken=null;function doConnect(){ws.binaryType="arraybuffer",ws.addEventListener("open",function(e){var s;void 0,s=VerifyCode(sn,cardToken),ws.send(s),s=GetScreenState(sn),ws.send(s)}),self.addEventListener("open",function(e){void 0,ws.send(e.data)},!1),ws&&setInterval(()=>{ws.send("ping"),self.postMessage({readyState:ws.readyState})},3e3),ws.addEventListener("message",function(e){var s,e=new Uint8Array(e.data);2e3<(new Date).getTime()-curTime&&(ws.send("ping"),curTime=(new Date).getTime()),0==e[0]&&0==e[1]&&0==e[2]&&1==e[3]?(s=31&e[4],frameCount++,5!=s&&7!=s||(self.postMessage(e),hasPPS=!0,ws.send("ping")),hasPPS?self.postMessage(e):2<++videoPacketNum&&!hasPPS&&(void 0,videoPacketNum=0,ws.send(RequestIFrame(sn)),hasPPS=!0)):255==e[0]&&self.postMessage(e),104==e[0]&&(92==e[23]&&(CheckVerifyCode(e)?(void 0,ws.send(ConfigChannel(sn)),s=makeSharpness(3),ws.send(s),s=fpsSet(20),ws.send(s)):void 0),5==e[23]&&1==e[28]&&1==e[29]&&(1==CheckScreenDirection(e.slice(24,32))?(void 0,self.postMessage({setResolving:1})):(void 0,self.postMessage({setResolving:0}))))}),ws.addEventListener("close",function(e){void 0,self.postMessage("close")})}self.addEventListener("message",function(e){"object"==typeof e.data&&e.data.socketURL&&(sn=e.data.sn,cardToken=e.data.token,socketURL=e.data.socketURL,ws=new WebSocket(socketURL),doConnect()),"restart"===e.data&&(void 0,ws=null,ws=new WebSocket(socketURL),doConnect()),void 0;try{ws&&ws.send(e.data)}catch(e){void 0}},!1);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,